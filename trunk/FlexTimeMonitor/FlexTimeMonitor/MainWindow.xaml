<Window x:Class="A9N.FlexTimeMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:p="clr-namespace:A9N.FlexTimeMonitor.Properties"
        Title="Flex Time Monitor" Height="600" Width="800" Closing="Window_Closing" StateChanged="Window_StateChanged" MinWidth="400" MinHeight="300" Icon="Icons/Stopwatch.ico" Loaded="Window_Loaded">
    <Window.Resources>
        <LinearGradientBrush x:Key="MenuBarBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="White" Offset="1" />
            <GradientStop Color="#FFC9C9C9" Offset="0.074" />
            <GradientStop Color="#FFD6D6D6" Offset="0.934" />
            <GradientStop Color="#FFF3F3F3" Offset="0.508" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MenuBarBrushLight" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="White" Offset="1" />
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="White" Offset="0.525" />
            <GradientStop Color="#FFE1E1E1" Offset="0.066" />
            <GradientStop Color="#FFE1E1E1" Offset="0.902" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridOddWeekBrush" StartPoint="0.5,0" EndPoint="0.5, 1" >
            <GradientStop Color="#D7F0FF" Offset="0"/>
            <GradientStop Color="#BCDFFF" Offset="0.5"/>
            <GradientStop Color="#D7F0FF" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridOddWeekMondayBrush" StartPoint="0.5,0" EndPoint="0.5, 1">
            <GradientStop Color="#A1DCFF" Offset="0"/>
            <GradientStop Color="#76BDFF" Offset="0.5"/>
            <GradientStop Color="#A1DCFF" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridEvenWeekBrush" StartPoint="0.5,0" EndPoint="0.5, 1">
            <GradientStop Color="#FFFFFF" Offset="0"/>
            <GradientStop Color="#EEEEEE" Offset="0.5"/>
            <GradientStop Color="#FFFFFF" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridEvenWeekMondayBrush" StartPoint="0.5,0" EndPoint="0.5, 1">
            <GradientStop Color="#EEEEEE" Offset="0"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#EEEEEE" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridTodayBrush" StartPoint="0.5,0" EndPoint="0.5, 1">
            <GradientStop Color="#D5FFDD" Offset="0"/>
            <GradientStop Color="#82FF99" Offset="0.5"/>
            <GradientStop Color="#D5FFDD" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridDiscrepanyBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF5050" Offset="0"/>
            <GradientStop Color="#D60101" Offset="0.5"/>
            <GradientStop Color="#FF5050" Offset="1"/>
        </LinearGradientBrush>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="115*" />
            <ColumnDefinition Width="25*" />
            <ColumnDefinition Width="58*"/>
        </Grid.ColumnDefinitions>
        <StatusBar Name="statusBar1" Width="Auto" Height="23" DataContext="{Binding}" VerticalAlignment="Bottom" Background="{StaticResource MenuBarBrushLight}" Grid.ColumnSpan="3">
            <TextBlock>Days</TextBlock>
            <TextBlock Name="statusBarDayCountValue" Width="60"></TextBlock>
            <Separator/>
            <TextBlock>Overall</TextBlock>
            <TextBlock Name="statusBarOverallValue" Width="60"></TextBlock>
            <Separator/>
            <TextBlock>Intended</TextBlock>
            <TextBlock Name="statusBarIntendedValue" Width="60"></TextBlock>
            <Separator/>
            <TextBlock>Difference</TextBlock>
            <TextBlock Name="statusBarDifferenceValue" Width="60"></TextBlock>
        </StatusBar>
        <DataGrid AutoGenerateColumns="False" 
                  Name="dataGridWorkDays" 
                  ItemsSource="{Binding}" 
                  GridLinesVisibility="All" 
                  Margin="0,23,0,21" 
                  SelectionChanged="dataGridWorkDays_SelectionChanged" 
                  IsReadOnly="False" Grid.ColumnSpan="3" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Week"  Binding="{Binding WeekOfYear}" IsReadOnly="True" MinWidth="20">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Week number." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Day"  Binding="{Binding Date.DayOfWeek}" IsReadOnly="True" MinWidth="80">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Day of week." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Date"  Binding="{Binding Date, StringFormat={}{0:dd.MM.yyyy}}" MinWidth="80">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Date of the workday." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Start"  Binding="{Binding Start, StringFormat=hh\\:mm\\:ss}" IsReadOnly="False" MinWidth="80" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Start time." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="End"  Binding="{Binding End, StringFormat=hh\\:mm\\:ss}" IsReadOnly="False" MinWidth="80" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="End time." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Discrepancy"  Binding="{Binding Discrepancy}" IsReadOnly="false" MinWidth="80" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Discrepancy is a positive or negative time offset that is taken into account when calculating the total workday time. For example a skipped lunch break can be set by +1h or a doctor's appointment can be set by -1h." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Overtime"  Binding="{Binding OverTimeString}" IsReadOnly="True" MinWidth="80" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="The overall work period. The value is positive if you worked longer than necessary and negative if you left too early." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <!--This is nearly ok. But the missing minus is a big problem.-->
                <!--<DataGridTextColumn Header="Overtime"  Binding="{Binding OverTime, StringFormat={}{0:hh':'mm':'ss}}" IsReadOnly="True" MinWidth="80" />-->
                <DataGridTextColumn Header="Note"  Binding="{Binding Note}" MinWidth="200" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Stores an additional note about the workday." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- START Odd week trigger-->
                        <!-- Highlight week -->
                        <DataTrigger Binding="{Binding IsOddWeek}" Value="true">
                            <Setter Property="Background" Value="{StaticResource GridOddWeekBrush}"/>
                            <!--<Setter Property="Background" Value="#EDF9FF" />-->
                        </DataTrigger>
                        <!-- Highlight monday -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsOddWeek}" Value="true" />
                                <Condition Binding="{Binding Date.DayOfWeek}" Value="Monday"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"  Value="{StaticResource GridOddWeekMondayBrush}" />
                            <!--<Setter Property="Background" Value="#D3EDFF" />-->
                        </MultiDataTrigger>
                        <!-- END Odd week trigger-->

                        <!-- START Even week trigger-->
                        <!-- Highlight week -->
                        <DataTrigger Binding="{Binding IsOddWeek}" Value="false">
                            <Setter Property="Background" Value="{StaticResource GridEvenWeekBrush}" />
                            <!--<Setter Property="Background" Value="White" />-->
                        </DataTrigger>
                        <!-- Highlight monday -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Date.DayOfWeek}" Value="Monday"/>
                                <Condition Binding="{Binding IsOddWeek}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource GridEvenWeekMondayBrush}" />
                            <!--<Setter Property="Background" Value="#EEEEEE" />-->
                        </MultiDataTrigger>
                        <!-- END Even week trigger-->

                        <!-- Highlight today -->
                        <DataTrigger Binding="{Binding IsToday}" Value="true">
                            <Setter Property="Background" Value="{StaticResource GridTodayBrush}" />
                            <!--<Setter Property="Background" Value="PaleGreen" />-->
                        </DataTrigger>

                        <!-- Highlight discrepancy -->
                        <DataTrigger Binding="{Binding HasDiscrepancy}" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource GridDiscrepanyBrush}" />
                            <!--<Setter Property="Foreground" Value="Red" />-->
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
        <Menu Width="Auto" Height="25" Name="mainMenu" VerticalAlignment="Top" Grid.ColumnSpan="3">
            <MenuItem Header="File" Name="menuItemFile">
                <MenuItem Header="Save" Name="MenuItemSave" Click="MenuItemSave_Click" />
                <Separator HorizontalAlignment="Left" Width="183"/>
                <MenuItem Header="Quit" Name="MenuItemQuit" Click="MenuItemQuit_Click" />
                <MenuItem Header="Quit without save" Name="MenuItemQuitWithoutSave" Click="MenuItemQuitWithoutSave_Click" />
            </MenuItem>
            <MenuItem Header="Options" Name="menuItemOptions">
                <MenuItem Header="Edit" Click="MenuItemEditOptions_Click_1" Name="menuItemEditOptions" />
            </MenuItem>
            <MenuItem Header="Help" Name="menuItemHelp">
                <MenuItem Header="About" Click="MenuItemAbout_Click" Name="menuItemAbout" />
            </MenuItem>
        </Menu>
    </Grid>
</Window>
