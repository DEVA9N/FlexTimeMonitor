<Window x:Class="A9N.FlexTimeMonitor.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:p="clr-namespace:A9N.FlexTimeMonitor.Properties"
        Title="Flex Time Monitor" 
        Height="768" 
        Width="1279" 
        Closing="Window_Closing" 
        StateChanged="Window_StateChanged" 
        MinWidth="400" 
        MinHeight="300" 
        Icon="../Resources/1451943285_performance-clock-speed.ico" 
        Loaded="Window_Loaded">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="115*" />
            <ColumnDefinition Width="25*" />
            <ColumnDefinition Width="58*"/>
        </Grid.ColumnDefinitions>
        <StatusBar Name="statusBar1" Width="Auto" Height="23" DataContext="{Binding}" VerticalAlignment="Bottom" Grid.ColumnSpan="3" BorderBrush="#FFBBBBBB" BorderThickness="0,1,0,0">
            <TextBlock>Days</TextBlock>
            <TextBlock Name="statusBarDayCountValue" Width="60"></TextBlock>
            <Separator/>
            <TextBlock>Overall</TextBlock>
            <TextBlock Name="statusBarOverallValue" Width="60"></TextBlock>
            <Separator/>
            <TextBlock>Intended</TextBlock>
            <TextBlock Name="statusBarIntendedValue" Width="60"></TextBlock>
            <Separator/>
            <TextBlock>Difference</TextBlock>
            <TextBlock Name="statusBarDifferenceValue" Width="60"></TextBlock>
        </StatusBar>
        <DataGrid AutoGenerateColumns="False" 
                  Name="dataGridWorkDays" 
                  ItemsSource="{Binding}" 
                  GridLinesVisibility="All" 
                  Margin="0,25,0,23" 
                  SelectionChanged="dataGridWorkDays_SelectionChanged" 
                  IsReadOnly="False" Grid.ColumnSpan="3" 
                   CanUserAddRows="False" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Week"  Binding="{Binding WeekOfYear}" IsReadOnly="True" MinWidth="20">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Week number." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Day"  Binding="{Binding Date.DayOfWeek}" IsReadOnly="True" MinWidth="80">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Day of week." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Date"  Binding="{Binding Date, StringFormat={}{0:dd.MM.yyyy}}" MinWidth="80">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Date of the workday." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Start"  Binding="{Binding Start, StringFormat=hh\\:mm\\:ss}" IsReadOnly="False" MinWidth="80" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Start time." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="End"  Binding="{Binding End, StringFormat=hh\\:mm\\:ss}" IsReadOnly="False" MinWidth="80" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="End time." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Discrepancy"  Binding="{Binding Discrepancy}" IsReadOnly="false" MinWidth="80" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Discrepancy is a positive or negative time offset that is taken into account when calculating the total workday time. For example a skipped lunch break can be set by +1h or a doctor's appointment can be set by -1h." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Overtime"  Binding="{Binding OverTimeString}" IsReadOnly="True" MinWidth="80" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="The overall work period. The value is positive if you worked longer than necessary and negative if you left too early." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <!--This is nearly ok. But the missing minus is a big problem.-->
                <!--<DataGridTextColumn Header="Overtime"  Binding="{Binding OverTime, StringFormat={}{0:hh':'mm':'ss}}" IsReadOnly="True" MinWidth="80" />-->
                <DataGridTextColumn Header="Note"  Binding="{Binding Note}" MinWidth="200" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip" Value="Stores an additional note about the workday." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- Highlight Odd week -->
                        <DataTrigger Binding="{Binding IsOddWeek}" Value="true">
                            <Setter Property="Background" Value="#B3E7FF" />
                        </DataTrigger>

                        <!-- Highlight Even week -->
                        <DataTrigger Binding="{Binding IsOddWeek}" Value="false">
                            <Setter Property="Background" Value="White" />
                        </DataTrigger>
                        
                        <!-- Highlight today -->
                        <DataTrigger Binding="{Binding IsToday}" Value="true">
                            <Setter Property="Background" Value="PaleGreen" />
                        </DataTrigger>

                        <!-- Highlight discrepancy -->
                        <DataTrigger Binding="{Binding HasNegativeOvertime}" Value="true">
                            <Setter Property="Foreground" Value="Red" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
        <Menu Width="Auto" Height="25" Name="mainMenu" VerticalAlignment="Top" Grid.ColumnSpan="3" Background="#FFF1EDED" BorderBrush="#FFBBBBBB" BorderThickness="0,0,0,1">
            <MenuItem Header="File" Name="menuItemFile">
                <MenuItem Header="Save" Name="MenuItemSave" Click="MenuItemSave_Click" />
                <Separator HorizontalAlignment="Left" Width="183"/>
                <MenuItem Header="Quit" Name="MenuItemQuit" Click="MenuItemQuit_Click" />
            </MenuItem>
            <MenuItem Header="Options" Name="menuItemOptions">
                <MenuItem Header="Edit" Click="MenuItemEditOptions_Click_1" Name="menuItemEditOptions" />
            </MenuItem>
            <MenuItem Header="Help" Name="menuItemHelp">
                <MenuItem Header="About" Click="MenuItemAbout_Click" Name="menuItemAbout" />
            </MenuItem>
        </Menu>
    </Grid>
</Window>
